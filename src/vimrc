" --------- OSX ---------
"
" brew reinstall vim --HEAD --with-cscope --with-lua --override-system-vim
" brew reinstall macvim --HEAD --with-cscope --with-lua --override-system-vim
" brew install neovim/neovim/neovim
" pip3 install neovim --upgrade
"
" brew install --HEAD olafurpg/scalafmt/scalafmt
" brew install reattach-to-user-namespace
" --------- LNX --------- (debian-based)
" apt install build-essential python-dev cmake zsh
" --------- ALL ---------
" curl https://sh.rustup.rs -sSf | sh
" install https://github.com/romainl/flattened
" brew install zplug
" brew install zsh-history-substring-search
" git clone https://github.com/gmarik/vundle.git ~/.vim/bundle/vundle
" mkdir -p ~/.vim/swapfiles
" restart vim :BundleInstall
" build ~/.vim/bundle/YouCompleteMe with: PYTHON_CONFIGURE_OPTS="--enable-framework" ./install.py --clang-completer --gocode-completer --tern-completer --rust-completer
" rustup component add rls-preview rust-analysis rust-src
" rustup component add rustfmt-preview
"
" build ~/.vim/bundle/vimproc.vim with: make
" curl -sSL https://get.haskellstack.org/ | sh
" git clone git@github.com:olivierverdier/zsh-git-prompt.git ~/tmp/zsh-git-prompt
" for haskell above: stack setup && stack build && stack install
" sudo pip install flake8 jedi
" sudo pip3 install flake8 jedi
" nerd fonts
" https://github.com/ryanoasis/nerd-fonts#option-3-install-script

syntax on

:set nu
set nocompatible " be iMproved
filetype off     " required!

set directory=~/.vim/swapfiles// 

set hidden
set expandtab
set tabstop=2
set shiftwidth=2

set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
"Plugin 'ensime/ensime-vim'
Plugin 'Shougo/vimproc.vim.git'
Plugin 'Valloric/YouCompleteMe'
Plugin 'aklt/plantuml-syntax'
Plugin 'derekwyatt/vim-sbt'
Plugin 'derekwyatt/vim-scala'
Plugin 'diepm/vim-rest-console'
Plugin 'ervandew/screen'
Plugin 'gmarik/vundle'
Plugin 'godlygeek/tabular'
Plugin 'majutsushi/tagbar'
Plugin 'mattn/gist-vim'
Plugin 'mattn/webapi-vim'
Plugin 'navicore/vis.vim'
Plugin 'navicore/vissort.vim'
Plugin 'scrooloose/nerdtree'
Plugin 'tomtom/tcomment_vim'
Plugin 'tpope/vim-markdown'
Plugin 'wannesm/wmgraphviz.vim'
Plugin 'ryanoasis/vim-devicons'
Plugin 'slashmili/alchemist.vim'
Plugin 'elixir-editors/vim-elixir'
Plugin 'w0rp/ale'
Plugin 'fatih/vim-go'
Plugin 'rust-lang/rust.vim'
Plugin 'christoomey/vim-tmux-navigator'
Plugin 'tpope/vim-fireplace.git'

let g:alchemist#elixir_erlang_src = "/Users/navicore/tmp/sources"
let g:alchemist_tag_map = '<C-]>'
let g:alchemist_tag_stack_map = '<C-T>'

let NERDTreeShowHidden=1

filetype plugin indent on     " required!

set completeopt-=preview

" ale airline text
let g:airline#extensions#ale#enabled = 1

let g:ale_linters = {'rust': ['rls']}

"dot / graphiz
let g:WMGraphviz_dot = 'dot'
let g:WMGraphviz_output = 'png'
let g:WMGraphviz_viewer = 'open'

set autoread

set statusline+=%#warningmsg#
set statusline+=%*

let g:ScreenImpl = 'Tmux'

nmap <F4> :w<CR>:make<CR>:copen<CR>

function SetIDEOptions()
  if isdirectory('.git')
    "CtrlP
    NERDTree
    "Tagbar
  endif
endfunction

autocmd vimenter * if !argc() | call SetIDEOptions() | endif
map <C-n> :NERDTreeToggle<CR>

map <C-t> :TagbarToggle<CR>

"set the source for autocomplete
set complete=.,w,b,u,t,i

set tags=./.tags;,.tags;

set spell
set spelllang=en_us

"hit enter after search to remove highlights
set hlsearch
nnoremap <CR> :nohlsearch<CR><CR>

map <C-h> <C-w>h
map <C-j> <C-w>j
map <C-k> <C-w>k
map <C-l> <C-w>l

set colorcolumn=81

"set listchars=tab:>~,nbsp:_,trail:.
"set list

xnoremap . :normal .<CR>

"buble single line
nmap <C-k> ddkP
nmap <C-j> ddp

"buble multiple lines
vmap <C-k> xkP`[V`]
vmap <C-j> xp`[V`]

let g:vrc_output_buffer_name = '__VRC_OUTPUT.json'
let g:vrc_curl_opts = {
  \ '--connect-timeout' : 5,
  \ '--max-time': 60,
  \ '--ipv4': '',
  \ '-ks': '',
\}

set clipboard=unnamed

if filereadable(glob('./.vimrc.local'))
     so ./.vimrc.local
endif

if has("persistent_undo")
    set undodir=~/.undodir/
    set undofile
endif

au BufRead,BufNewFile *.sbt set filetype=sbt

"plantuml
autocmd BufWritePost,FileWritePost *.uml :silent make

" START color toggle
set background=dark
colorscheme flattened_dark

map <F5> :call ToggleBg()<CR>
function! ToggleBg()
  if &background == 'dark'
    set bg=light
    colorscheme flattened_light
  else
    set bg=dark
    colorscheme flattened_dark
  endif
endfunc
" END color toggle

" unfortunately this only helps vim.  doesn't fix the bazillion other *nix
" shells I use VI mode with :|   not happy with post '15 apple
inoremap jj <Esc>`^

" START for devicons
set encoding=utf8
"set guifont=DroidSansMono\ Nerd\ Font:h11
let g:airline_powerline_fonts = 1
"set macligatures
set guifont=Fira\ Code:h12
" END for devicons

"golang stuff...
let mapleader = ","
" save when :make is called
set autowrite
autocmd FileType go nmap <leader>r  <Plug>(go-run)
autocmd FileType go nmap <leader>t  <Plug>(go-test)
" run :GoBuild or :GoTestCompile based on the go file
function! s:build_go_files()
  let l:file = expand('%')
  if l:file =~# '^\f\+_test\.go$'
    call go#test#Test(0, 1)
  elseif l:file =~# '^\f\+\.go$'
    call go#cmd#Build(0)
  endif
endfunction
autocmd FileType go nmap <leader>b :<C-u>call <SID>build_go_files()<CR>
autocmd FileType go nmap <Leader>c <Plug>(go-coverage-toggle)
let g:go_fmt_command = "goimports"
let g:go_textobj_include_function_doc = 0

let g:rustfmt_autosave = 1

