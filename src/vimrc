" --------- OSX ---------
" brew install --HEAD olafurpg/scalafmt/scalafmt
" brew install reattach-to-user-namespace
" --------- LNX --------- (debian-based)
" apt install build-essential python-dev cmake zsh
" --------- ALL ---------
" install https://github.com/romainl/flattened
" mkdir .antigen && curl -L git.io/antigen > .antigen/antigen.zsh
" git clone https://github.com/gmarik/vundle.git ~/.vim/bundle/vundle
" mkdir -p ~/.vim/swapfiles
" restart vim :BundleInstall
" build ~/.vim/bundle/YouCompleteMe with: ./install.py --clang-completer --gocode-completer --tern-completer
" build ~/.vim/bundle/vimproc.vim with: make
" git clone git@github.com:olivierverdier/zsh-git-prompt.git ~/tmp/zsh-git-prompt
" for haskell above: stack setup && stack build && stack install

syntax on

:set nu
set nocompatible " be iMproved
filetype off     " required!

set directory=~/.vim/swapfiles// 

set hidden
set expandtab
set tabstop=2
set shiftwidth=2

set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

Plugin 'mileszs/ack.vim'
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
Plugin 'ensime/ensime-vim'
Plugin 'google/vim-jsonnet'
Plugin 'fleischie/vim-styled-components'
Plugin 'Shougo/vimproc.vim.git'
Plugin 'Valloric/YouCompleteMe'
Plugin 'aklt/plantuml-syntax'
Plugin 'derekwyatt/vim-sbt'
Plugin 'derekwyatt/vim-scala'
Plugin 'diepm/vim-rest-console'
Plugin 'ervandew/screen'
Plugin 'gmarik/vundle'
Plugin 'godlygeek/tabular'
Plugin 'majutsushi/tagbar'
Plugin 'mattn/gist-vim'
Plugin 'mattn/webapi-vim'
Plugin 'navicore/vis.vim'
Plugin 'navicore/vissort.vim'
Plugin 'scrooloose/nerdtree'
Plugin 'tomtom/tcomment_vim'
Plugin 'tpope/vim-fugitive'
Plugin 'tpope/vim-unimpaired'
Plugin 'tpope/vim-markdown'
Plugin 'tpope/vim-surround'
Plugin 'wannesm/wmgraphviz.vim'
Plugin 'w0rp/ale'
Plugin 'sbdchd/neoformat'

let NERDTreeShowHidden=1

filetype plugin indent on     " required!

set completeopt-=preview

" ale airline text
let g:airline#extensions#ale#enabled = 1

"dot / graphiz
let g:WMGraphviz_dot = 'dot'
let g:WMGraphviz_output = 'png'
let g:WMGraphviz_viewer = 'open'

set autoread

set statusline+=%#warningmsg#
set statusline+=%*

let g:ScreenImpl = 'Tmux'

nmap <F4> :w<CR>:make<CR>:copen<CR>

function SetIDEOptions()
  if isdirectory('.git')
    "CtrlP
    NERDTree
    "Tagbar
  endif
endfunction

autocmd vimenter * if !argc() | call SetIDEOptions() | endif
map <C-n> :NERDTreeToggle<CR>

map <C-t> :TagbarToggle<CR>

"set the source for autocomplete
set complete=.,w,b,u,t,i

set tags=./.tags;,.tags;

set spell
set spelllang=en_us

"hit enter after search to remove highlights
set hlsearch
nnoremap <CR> :nohlsearch<CR><CR>

map <C-h> <C-w>h
map <C-j> <C-w>j
map <C-k> <C-w>k
map <C-l> <C-w>l

set colorcolumn=81

set listchars=tab:>~,nbsp:_,trail:.
set list

xnoremap . :normal .<CR>

"buble single line
nmap <C-k> ddkP
nmap <C-j> ddp

"buble multiple lines
vmap <C-k> xkP`[V`]
vmap <C-j> xp`[V`]

let g:vrc_output_buffer_name = '__VRC_OUTPUT.json'
let g:vrc_curl_opts = {
  \ '--connect-timeout' : 5,
  \ '--max-time': 60,
  \ '--ipv4': '',
  \ '-ks': '',
\}

set clipboard=unnamed

if filereadable(glob('./.vimrc.local'))
     so ./.vimrc.local
endif

if has("persistent_undo")
    set undodir=~/.undodir/
    set undofile
endif

au BufRead,BufNewFile *.sbt set filetype=sbt

"plantuml
autocmd BufWritePost,FileWritePost *.uml :silent make

" START color toggle
set background=dark
colorscheme flattened_dark
map <F5> :call ToggleBg()<CR>
function! ToggleBg()
  if &background == 'dark'
    set bg=light
    colorscheme flattened_light
  else
    set bg=dark
    colorscheme flattened_dark
  endif
endfunc
" END color toggle

noremap <F3> :Autoformat<CR>

let g:neoformat_scala_scalafmt = {
      \ 'exe': 'scalafmt',
      \ 'args': ['--stdin', '2>/dev/null'],
      \ 'replace': 0,
      \ 'stdin': 1,
      \ 'no_append': 1,
      \ }
let g:neoformat_enabled_scala = ['scalafmt']

let g:neoformat_java_google = {
      \ 'exe': 'java',
      \ 'args': ['-jar', '~/bin/google-java-format-1.5-all-deps.jar', '-'],
      \ 'replace': 0,
      \ 'stdin': 1,
      \ 'no_append': 1,
      \ }
let g:neoformat_enabled_java = ['google']

" CAUSES MORE TROUBLE THAN IT IS WORTH
" augroup fmt
"   autocmd!
"   autocmd BufWritePre * undojoin | Neoformat
" augroup END

" unfortunately this only helps vim.  doesn't fix the bazillion other *nix
" shells I use VI mode with :|   not happy with post '15 apple
inoremap jj <Esc>`^

