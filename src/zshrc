# run this after the zinit has created your changes to ~/.zshrc - no before

#
# begin plugins
#

zinit light zsh-users/zsh-syntax-highlighting
zinit light zsh-users/zsh-completions
zinit light caarlos0/git-add-remote
zinit light cmuench/zsh-jenv
zinit ice depth=1 zinit light jeffreytse/zsh-vi-mode

# Load cargo env early if it exists (for rust completions)
[[ -f "$HOME/.cargo/env" ]] && source "$HOME/.cargo/env"

# Load rust completions using dedicated plugin BEFORE compinit
zinit light ryutok/rust-zsh-completions

# Initialize completions
autoload -U compinit && compinit

# Load fzf-tab AFTER all completions are set up
zinit light Aloxaf/fzf-tab
zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}' 'r:|=*' 'r:|=*' 'l:|=* r:|=*'

#
# end plugins
#

#export PATH="/usr/local/sbin:/usr/local/bin:$HOME/bin:$PATH"
export PATH="$HOME/bin:$PATH"

ulimit -n 4096
BLOCKSIZE=K;	export BLOCKSIZE
#VISUAL=vi;    export VISUAL
VISUAL=nvim;    export VISUAL
set -o vi
PAGER=more; export PAGER

[ -z "$EDITOR" ] && export EDITOR=/usr/local/bin/nvim

alias vim='nvim'
alias vi='nvim'

alias l='eza'
alias ls='eza'
alias ll='eza -l --header --git --tree --level 3'
alias cat='bat --paging=never'

alias k='kubectl'
alias dockerrm='docker rm $(docker ps -a -q)'
alias dockerrmi='docker rmi $(docker images -q)'
alias dockerrmif='docker rmi -f $(docker images -q)'

alias fetchupstream='git fetch upstream'
alias mergeupstreammain='git merge upstream/main'
alias mergeupstreammaster='git merge upstream/master'

export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8

export GIT_EDITOR="nvim -f"

export HISTFILE=~/.zsh_history
export HISTSIZE=999999
export SAVEHIST=1000

#
# Custom Cloud Theme with insane git prompt (really, I just want separate dirty and untracked indicators)
#

if [[ -z $ZSH_THEME_CLOUD_PREFIX ]]; then
    ZSH_THEME_CLOUD_PREFIX='☁'
fi

if [ -n "$SSH_CLIENT" ] || [ -n "$SSH_TTY" ]; then
  SESSION_TYPE=remote/ssh
else
  case $(ps -o comm= -p $PPID) in
    sshd|*/sshd) SESSION_TYPE=remote/ssh;;
  esac
fi

export KUBE_EDITOR=nvim

export GPG_TTY=$(tty)

autoload edit-command-line; zle -N edit-command-line
bindkey -M vicmd v edit-command-line

[[ -f "$HOME/.local/bin/env" ]] && source "$HOME/.local/bin/env"

#
# BEGIN PROMPT
#

# enable prompt

if command -v gitstatus >/dev/null 2>&1; then
  source <(gitstatus --script)
fi

# customize prompt

PROMPT_PRE=''
if [[ $SESSION_TYPE == 'remote/ssh' ]]; then
  PROMPT_PRE='%n@%m '
fi

PROMPT='${PROMPT_PRE}%{$fg_bold[cyan]%}$ZSH_THEME_CLOUD_PREFIX %{$fg[green]%}%p %{$fg[green]%}%c %{$fg[cyan]%}$(git_super_status)%{$fg_bold[red]%}% %{$reset_color%}'
ZSH_THEME_GIT_PROMPT_PREFIX="%{$fg_bold[cyan]%}["
ZSH_THEME_GIT_PROMPT_SUFFIX="%{$fg_bold[cyan]%}] "

ZSH_THEME_GIT_PROMPT_SEPARATOR=""
ZSH_THEME_GIT_PROMPT_BRANCH="%{$fg[green]%}"
ZSH_THEME_GIT_PROMPT_STAGED="%{$fg[blue]%}%{ ●%G%}"
ZSH_THEME_GIT_PROMPT_CONFLICTS="%{$fg[red]%}%{ ✖%G%}"
ZSH_THEME_GIT_PROMPT_CHANGED="%{$fg[yellow]%}%{ ✚%G%}"
ZSH_THEME_GIT_PROMPT_BEHIND="%{ ↓%G%}"
ZSH_THEME_GIT_PROMPT_AHEAD="%{ ↑%G%}"
ZSH_THEME_GIT_PROMPT_UNTRACKED="%{$fg_bold[red]%}%{ …%G%}"
ZSH_THEME_GIT_PROMPT_CLEAN=""

#
# END PROMPT
#
